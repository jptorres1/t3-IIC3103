{"version":3,"sources":["colors.js","reportWebVitals.js","useChat.js","ChatRoom.js","airplane.svg.png","index.js"],"names":["CSS_COLOR_NAMES","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NEW_CHAT_MESSAGE_EVENT","useChat","useState","messages","setMessages","socketRef","useRef","useEffect","current","socketIOClient","path","on","incomingMessage","disconnect","sendMessage","messageBody","nickname","emit","name","message","ChatRoom","React","newMessage","setNewMessage","setNickname","className","map","i","Date","date","toLocaleString","value","onChange","event","target","placeholder","onClick","socket","require","io","Markers","flights","setFlights","data","oldArray","position","setPosition","flight","index","code","Marker","icon","L","iconUrl","airplane","iconSize","Popup","DrawLines","Polyline","positions","origin","destination","pathOptions","color","dashArray","Flights","CardColumns","Card","border","style","width","Header","Body","Text","plane","seats","passengers","passenger","index2","age","ReactDOM","render","StrictMode","MapContainer","center","zoom","scrollWheelZoom","TileLayer","url","document","getElementById"],"mappings":"oNAoJiBA,G,MApJQ,CACrB,YACA,OACA,aAEA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,gBCrIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yFCJRQ,EAAyB,OAuChBC,EAnCC,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,KAEdC,EAAYC,mBAElBC,qBAAU,WAcR,OAXAF,EAAUG,QAAUC,IAVE,wDAUgC,CACpDC,KAAM,aAIRL,EAAUG,QAAQG,GAAGX,GAAwB,SAACY,GAC5CR,GAAY,SAACD,GAAD,4BAAkBA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","file":"static/js/main.b8dc7da7.chunk.js","sourcesContent":[" const CSS_COLOR_NAMES = [\n    \"AliceBlue\",\n    \"Aqua\",\n    \"Aquamarine\",\n    // \"Bisque\",\n    \"Black\",\n    \"BlanchedAlmond\",\n    \"Blue\",\n    \"BlueViolet\",\n    \"Brown\",\n    \"BurlyWood\",\n    \"CadetBlue\",\n    \"Chartreuse\",\n    \"Chocolate\",\n    \"Coral\",\n    \"CornflowerBlue\",\n    \"Cornsilk\",\n    \"Crimson\",\n    \"Cyan\",\n    \"DarkBlue\",\n    \"DarkCyan\",\n    \"DarkGoldenRod\",\n    \"DarkGray\",\n    \"DarkGrey\",\n    \"DarkGreen\",\n    \"DarkKhaki\",\n    \"DarkMagenta\",\n    \"DarkOliveGreen\",\n    \"DarkOrange\",\n    \"DarkOrchid\",\n    \"DarkRed\",\n    \"DarkSalmon\",\n    \"DarkSeaGreen\",\n    \"DarkSlateBlue\",\n    \"DarkSlateGray\",\n    \"DarkSlateGrey\",\n    \"DarkTurquoise\",\n    \"DarkViolet\",\n    \"DeepPink\",\n    \"DeepSkyBlue\",\n    \"DimGray\",\n    \"DimGrey\",\n    \"DodgerBlue\",\n    \"FireBrick\",\n    \"FloralWhite\",\n    \"ForestGreen\",\n    \"Fuchsia\",\n    \"Gainsboro\",\n    \"GhostWhite\",\n    \"Gold\",\n    \"GoldenRod\",\n    \"Gray\",\n    \"Grey\",\n    \"Green\",\n    \"GreenYellow\",\n    \"HoneyDew\",\n    \"HotPink\",\n    \"IndianRed\",\n    \"Indigo\",\n    \"Ivory\",\n    \"Khaki\",\n    \"Lavender\",\n    \"LavenderBlush\",\n    \"LawnGreen\",\n    \"LemonChiffon\",\n    \"LightBlue\",\n    \"LightCoral\",\n    \"LightCyan\",\n    \"LightGoldenRodYellow\",\n    \"LightGray\",\n    \"LightGrey\",\n    \"LightGreen\",\n    \"LightPink\",\n    \"LightSalmon\",\n    \"LightSeaGreen\",\n    \"LightSkyBlue\",\n    \"LightSlateGray\",\n    \"LightSlateGrey\",\n    \"LightSteelBlue\",\n    \"LightYellow\",\n    \"Lime\",\n    \"LimeGreen\",\n    \"Linen\",\n    \"Magenta\",\n    \"Maroon\",\n    \"MediumAquaMarine\",\n    \"MediumBlue\",\n    \"MediumOrchid\",\n    \"MediumPurple\",\n    \"MediumSeaGreen\",\n    \"MediumSlateBlue\",\n    \"MediumSpringGreen\",\n    \"MediumTurquoise\",\n    \"MediumVioletRed\",\n    \"MidnightBlue\",\n    \"MintCream\",\n    \"MistyRose\",\n    \"Moccasin\",\n    \"NavajoWhite\",\n    \"Navy\",\n    \"OldLace\",\n    \"Olive\",\n    \"OliveDrab\",\n    \"Orange\",\n    \"OrangeRed\",\n    \"Orchid\",\n    \"PaleGoldenRod\",\n    \"PaleGreen\",\n    \"PaleTurquoise\",\n    \"PaleVioletRed\",\n    \"PapayaWhip\",\n    \"PeachPuff\",\n    \"Peru\",\n    \"Pink\",\n    \"Plum\",\n    \"PowderBlue\",\n    \"Purple\",\n    \"RebeccaPurple\",\n    \"Red\",\n    \"RosyBrown\",\n    \"RoyalBlue\",\n    \"SaddleBrown\",\n    \"Salmon\",\n    \"SandyBrown\",\n    \"SeaGreen\",\n    \"SeaShell\",\n    \"Sienna\",\n    \"Silver\",\n    \"SkyBlue\",\n    \"SlateBlue\",\n    \"SlateGray\",\n    \"SlateGrey\",\n    \"Snow\",\n    \"SpringGreen\",\n    \"SteelBlue\",\n    \"Tan\",\n    \"Teal\",\n    \"Thistle\",\n    \"Tomato\",\n    \"Turquoise\",\n    \"Violet\",\n    \"Wheat\",\n    \"White\",\n    \"WhiteSmoke\",\n    \"Yellow\",\n    \"YellowGreen\",\n  ];\n\n  export default CSS_COLOR_NAMES;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst NEW_CHAT_MESSAGE_EVENT = \"CHAT\"; // Name of the event\nconst SOCKET_SERVER_URL = \"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\";\n\n\nconst useChat = () => {\n  const [messages, setMessages] = useState([]); // Sent and received messages\n  const socketRef = useRef();\n\n  useEffect(() => {\n    \n    // Creates a WebSocket connection\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      path: \"/flights\"\n    });\n    \n    // Listens for incoming messages\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (incomingMessage) => {\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n    \n    // Destroys the socket reference\n    // when the connection is closed\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  // Sends a message to the server that\n  // forwards it to all users in the same room\n  const sendMessage = (messageBody, nickname) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      name: nickname,\n      message: messageBody\n    });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;","import React from \"react\";\n\nimport \"./ChatRoom.css\";\nimport useChat from \"./useChat\";\n\nconst ChatRoom = () => {\n  const { messages, sendMessage } = useChat(); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\n  const [nickname, setNickname] = React.useState(\"\");\n  \n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleNickname = (event) => {\n    setNickname(event.target.value);\n  }\n\n  const handleSendMessage = () => {\n    sendMessage(newMessage, nickname);\n    setNewMessage(\"\");\n  };\n\n  return (\n    <div className=\"chat-room-container\">\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          {messages.map((message, i) => (            \n            <li\n              key={i}\n              className={`message-item ${\n                message.name === nickname ? \"my-message\" : \"received-message\"\n              }`}\n            >\n              {message.name} ({(new Date(message.date)).toLocaleString()}): {message.message}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Escribe algo...\"\n        className=\"new-message-input-field\"\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n\n      <br /><br /><br />\n      <b className=\"nickname-text\">Nickname</b>\n      <textarea\n        value={nickname}\n        onChange={handleNickname}\n        placeholder=\"Escribe tu nickname acá\"\n        className=\"nickname-field\"\n      />\n    </div>\n  );\n};\n\nexport default ChatRoom;","export default __webpack_public_path__ + \"static/media/airplane.svg.ea29a2be.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CSS_COLOR_NAMES from './colors.js';\nimport reportWebVitals from './reportWebVitals';\nimport { MapContainer, Polyline, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, CardColumns } from 'react-bootstrap';\nimport ChatRoom from './ChatRoom.js';\nimport * as L from \"leaflet\";\nimport airplane from './airplane.svg.png'\n\n\nconst io = require(\"socket.io-client\");\nconst socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n  path: '/flights'\n});\n\nsocket.emit(\"FLIGHTS\")\n\nconst Markers = () =>  {\n  const [flights, setFlights] = React.useState([]);\n  socket.on(\"FLIGHTS\", data => {\n    setFlights(oldArray => [...oldArray, data]);\n  });\n  const [position, setPosition] = React.useState({\"code\": \"\", \"position\": [30, 30]});\n  socket.on(\"POSITION\", data => {\n    setPosition(data);\n  });\n\n  return (\n    <ol>\n    {flights.map((flight, i) => (\n      flight.map((data,index) => (\n        position.code === data.code ? <Marker position={position.position} icon={L.icon({iconUrl: airplane, iconSize: [20, 20]})}>\n          <Popup>{data.code}</Popup>\n        </Marker> : null\n        ))))}\n    </ol>\n      );\n};\n\n// const Traits = () =>  {\n//   const [positions, setPosition] = React.useState([]);\n\n//   const [flights, setFlights] = React.useState([]);\n//   socket.on(\"FLIGHTS\", data => {\n//     setFlights(oldArray => [...oldArray, data]);\n//   });\n\n//   socket.on(\"POSITION\", data => {\n//     setPosition(oldArray => [...oldArray, data]);\n//   });\n//   return (\n//     <ol>\n//     {positions.map((flight_position, i) => (\n//       <Circle center={flight_position.position} radius={10} pathOptions={{color: 'white'}}/>))}\n//     </ol> );\n// };\n\n\nconst DrawLines = () => {\n  const [flights, setFlights] = React.useState([]);\n  socket.on(\"FLIGHTS\", data => {\n    setFlights(oldArray => [...oldArray, data]);\n  });\n  return (\n    <ol>\n    {flights.map((flight, i) => (\n      flight.map((data,index) => ( \n        <Polyline positions={[data.origin, data.destination]} pathOptions={{color: CSS_COLOR_NAMES[index], dashArray: '5, 5'}}/>\n        ))))}\n    </ol>\n     );\n}\n \n\nconst Flights = () =>  {\n  const [flights, setFlights] = React.useState([]);\n  socket.on(\"FLIGHTS\", data => {\n    setFlights(oldArray => [...oldArray, data]);\n  });\n  return (\n    <CardColumns>\n    {flights.map((flight, i) => (\n      flight.map((data,index) => ( \n       <Card border=\"secondary\" style={{ width: '18rem' }}>\n            <Card.Header>Vuelo {data.code}</Card.Header>\n            <Card.Body>\n            <Card.Text>\n             Origen: {data.origin}\n            </Card.Text>\n           <Card.Text>\n             Destino: {data.destination}\n           </Card.Text>\n            <Card.Text>\n             Avión: {data.plane}\n            </Card.Text>\n           <Card.Text>\n          Asientos: {data.seats}\n       </Card.Text>\n       <Card.Text>\n          Pasajeros: {data.passengers.map((passenger, index2) => (<li>{passenger.name} ({passenger.age})</li>))}\n       </Card.Text>\n       </Card.Body>\n       </Card>\n    ))))}\n    </CardColumns> )}\n\n\n// const FlightData = () => {\n//   const [flights, setFlights] = React.useState([]);\n//   socket.on(\"FLIGHTS\", data => {\n//     setFlights(oldArray => [...oldArray, data]);\n//   });\n//   return (\n//     <div></div>\n//   )\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n      <div className=\"wrapper\">\n\n        <div className=\"three\">\n        <Card border=\"secondary\" style={{ width: '60rem' }}>\n          <Card.Header>Mapa \"En vivo\"</Card.Header>\n          <Card.Body> \n          <div className=\"leaflet-container\">\n          <MapContainer center={[30.5, 10.5]} zoom={2} scrollWheelZoom={false}>\n            <Markers />\n            <DrawLines />\n              <TileLayer\n                // attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n          </MapContainer>\n        </div>\n          </Card.Body>\n        </Card>\n        </div>\n\n        <div className=\"four\" >\n        <Card border=\"secondary\" style={{ width: '23rem' }}>\n          <Card.Header>Centro de Control</Card.Header>\n          <Card.Body> <ChatRoom/></Card.Body>\n        </Card>\n        </div>\n\n        <div className=\"five\" >\n        <Card border=\"secondary\" style={{ width: '60rem' }}>\n          <Card.Header>Información de los vuelos</Card.Header>\n          <Card.Body> \n          {/* <button onClick={ socket.emit(\"FLIGHTS\") }>\n            Get Info\n            </ button> */}\n            <Flights />\n          </Card.Body>\n        </Card>\n        </div>\n\n\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}